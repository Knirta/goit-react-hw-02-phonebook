{"version":3,"sources":["components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactListItem/ContactListItem.js","components/contactList/ContactList.js","components/container/Container.js","App.js","index.js"],"names":["ContactForm","state","name","props","initialInput","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","onSubmit","reset","this","className","type","pattern","title","required","onChange","Component","defaultProps","Filter","filter","handleFilter","ContactListItem","contactId","deleteContact","onClick","ContactList","contacts","map","id","Container","children","App","addContact","contactData","find","contact","alert","uuidv4","prevState","filterContact","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c28104b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactForm.scss\";\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    initialInput: \"\",\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: this.props.initialInput,\n    number: this.props.initialInput,\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\n        <label>\n          <p className=\"Form__label\">Name:</p>\n          <input\n            className=\"Form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={name}\n          />\n        </label>\n        <label>\n          <p className=\"Form__label\">Number:</p>\n          <input\n            className=\"Form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className=\"Form__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Filter.scss\";\n\nconst Filter = ({ filter, handleFilter }) => {\n  return (\n    <label>\n      <p className=\"Filter__title\">Find contacts by name</p>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactListItem.scss\";\n\nconst ContactListItem = ({ name, number, contactId, deleteContact }) => {\n  return (\n    <li className=\"Item\">\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className=\"Item__button\"\n        type=\"button\"\n        onClick={() => deleteContact(contactId)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem\";\nimport \"./ContactList.scss\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          contactId={id}\n          name={name}\n          number={number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Container.scss\";\n\nconst Container = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/contactForm\";\nimport Filter from \"./components/filter\";\nimport ContactList from \"./components/contactList\";\nimport Container from \"./components/container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  addContact = (contactData) => {\n    if (\n      this.state.contacts.find((contact) => contact.name === contactData.name)\n    ) {\n      alert(contactData.name + \" is already in contacts\");\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: contactData.name,\n      number: contactData.number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContact();\n\n    return (\n      <Container>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter filter={filter} handleFilter={this.handleFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize\";\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}